# Copyright JS Foundation and other contributors, http://js.foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

CUR_DIR := $(dir $(realpath $(firstword $(MAKEFILE_LIST))))
BUILD_DIRECTORY  = build/obj-esp8266
ESP_TARGET = targets/esp8266
COPYTARGET = $(ESP_TARGET)/libs
USBDEVICE  ?= /dev/ttyUSB0
JERRYDEBUGGER  ?= OFF
JERRYHEAP  ?= 20
REDIRECT_STDOUT  ?= OFF
ESPTOOL    ?= $(ESPTOOL_PATH)/esptool.py

# compile flags
ESP_CFLAGS := -D__TARGET_ESP8266 -D__attr_always_inline___=

MFORCE32 = $(shell xtensa-lx106-elf-gcc --help=target | grep mforce-l32)

ifneq ($(MFORCE32),)
    # Your compiler supports the -mforce-l32 flag which means that
    # constants can be placed in ROM to free additional RAM
    ESP_CFLAGS += -DJERRY_CONST_DATA="__attribute__((aligned(4))) __attribute__((section(\".irom.text\")))"
    ESP_CFLAGS += -mforce-l32
endif

ESP_CFLAGS := -DJERRY_CONST_DATA='__attribute__((section(\".irom0.literal\")))'
ESP_CFLAGS += -Wl,-EL -fno-inline-functions
ESP_CFLAGS += -ffunction-sections -fdata-sections
ESP_CFLAGS += -mlongcalls -mtext-section-literals -mno-serialize-volatile

ifeq ($(JERRYDEBUGGER), ON)
	LWIP_INLCUDE := -I$(CUR_DIR)/include
	LWIP_INLCUDE += -I$(RTOS_PATH)/core/include
	LWIP_INLCUDE += -I$(RTOS_PATH)/lwip/include
	LWIP_INLCUDE += -I$(RTOS_PATH)/lwip/lwip/src/include
endif

.PHONY: jerry js2c mkbin check-env flash clean

all: check-env jerry js2c mkbin

jerry:
	mkdir -p $(BUILD_DIRECTORY)
	mkdir -p $(COPYTARGET)
	cmake -B$(BUILD_DIRECTORY) -H./ \
	 -DCMAKE_SYSTEM_NAME=MCU \
	 -DCMAKE_SYSTEM_PROCESSOR=xtensia-lx106 \
	 -DCMAKE_C_COMPILER=xtensa-lx106-elf-gcc \
	 -DCMAKE_C_COMPILER_WORKS=TRUE \
	 -DENABLE_LTO=OFF \
	 -DENABLE_ALL_IN_ONE=ON \
	 -DFEATURE_ERROR_MESSAGES=OFF	\
	 -DFEATURE_SYSTEM_ALLOCATOR=ON \
	 -DFEATURE_DEBUGGER=$(JERRYDEBUGGER) \
	 -DFEATURE_PROFILE="esp" \
	 -DJERRY_CMDLINE=OFF \
	 -DEXTERNAL_COMPILE_FLAGS="$(ESP_CFLAGS)" \
	 -DMEM_HEAP_SIZE_KB=$(JERRYHEAP)

	make -C$(BUILD_DIRECTORY) jerry-core jerry-libm
	cp $(BUILD_DIRECTORY)/lib/libjerry-core.a $(COPYTARGET)/
	cp $(BUILD_DIRECTORY)/lib/libjerry-libm.a $(COPYTARGET)/

js2c:
	tools/js2c.py --dest $(ESP_TARGET)/include --js-source $(ESP_TARGET)/js

mkbin:
	make -j4 -C$(ESP_TARGET)

flash:
	make flash -C$(ESP_TARGET) ESPPORT=$(USBDEVICE)

erase_flash:
	make erase_flash -C$(ESP_TARGET) ESPPORT=$(USBDEVICE)

check-env:
ifndef RTOS_PATH
	$(error RTOS_PATH is undefined for ESP8266)
endif

clean:
	rm -rf $(BUILD_DIRECTORY)
	rm -rf $(ESP_TARGET)/build
